<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rems.common.persistence.CommonMapper">
    <sql id="PagingTemplateHeader">
    <![CDATA[
        SELECT SQL_CALC_FOUND_ROWS TEMP.*
          FROM (
                     SELECT ORG.*
                          , FOUND_ROWS() as total
                       FROM (
                              SELECT TEMP.*
                                   , @n := @n+1 as records
                              FROM (
    ]]>
    </sql>

    <sql id="PagingTemplateCount">
    </sql>

    <sql id="PagingTemplateBottom">
    <![CDATA[
                                    ) TEMP
                                  , (SELECT @n:=0) r
                          ) ORG
                 ) TEMP

         LIMIT #{start}, #{limit}
    ]]>
    </sql>
    
     <select id="selectTotalCnt" resultType="int">
     	SELECT FOUND_ROWS()
     </select>

	<!-- 시스템 현재일자 -->
    <select id="retrieveSysdate" resultType="String">
    <![CDATA[
    SELECT NOW() AS sysdate

    /* rems.common.persistence.CommonMapper.retrieveSysdate */
    ]]>
    </select>
    
    <!-- 조직 조회 카운트 -->
    <select id="retrieveOrgCdCnt" parameterType="Map" resultType="GridOrgMgntVo">
	<![CDATA[
		SELECT 
			COUNT(*) 	AS orgCnt, 
			MAX(ORG_CD)	AS orgCd, 
			MAX(ORG_NM) AS orgNm 
      	FROM 
      		TH_COMPANY_ORG_MST 
      	WHERE 1 = 1 
      		AND COMPANY_CD = #{companyCd} 
          	AND (
				INSTR(ORG_CD, #{orgNm}) > 0 
            	OR 
            	INSTR(ORG_NM, #{orgNm}) > 0
          	) 
          	AND USE_YN = 'Y'
    ]]>
    </select>

	<!-- 조직 목록(팝업) -->
    <select id="retrieveOrgCd" parameterType="Map" resultType="Map">
    <![CDATA[
		SELECT 
      		A.ORG_CD		AS orgCd, 
      		A.ORG_NM		AS orgNm, 
      		A.ORG_TYPE	AS orgType, 
       		A.INDEX_HIER	AS indexHier,
       		CASE WHEN '' IS NOT NULL THEN 'true' ELSE 'false' END AS selected
      	FROM TH_COMPANY_ORG_MST A
      	WHERE 1 = 1 
      		AND A.COMPANY_CD = #{companyCd} 
          	AND A.USE_YN = 'Y'
      	ORDER BY indexHier
	]]>
    </select>

	<!-- 조직 목록 공지사항코드(팝업) -->
    <select id="retrieveOrgCdNoticeId" parameterType="Map" resultType="Map">
    <![CDATA[
		SELECT 
      		A.ORG_CD		AS orgCd, 
      		A.ORG_NM		AS orgNm, 
      		A.ORG_TYPE	AS orgType, 
       		A.INDEX_HIER	AS indexHier,
       		CASE WHEN B.ORG_CD IS NOT NULL THEN 'true' ELSE 'false' END AS selected
      	FROM TH_COMPANY_ORG_MST A
      	LEFT OUTER JOIN TH_NOTICE_TARGET_ORG B
		ON A.COMPANY_CD = B.COMPANY_CD
		AND A.ORG_CD = B.ORG_CD
		AND B.NOTICE_ID = #{noticeId}
      	WHERE 1 = 1 
      		AND A.COMPANY_CD = #{companyCd} 
          	AND A.USE_YN = 'Y'
      	ORDER BY indexHier
	]]>
    </select>
    
    <!-- 매장 조회 카운트 -->
    <select id="retrieveStoreCnt" parameterType="Map" resultType="GridStoreMgntVo">
	<![CDATA[
		SELECT 
			COUNT(*) 	AS strCnt, 
			MAX(STR_CD)	AS strCd, 
			MAX(STR_NM) AS strNm,
			VIEW_STR_CD	AS viewStrCd, 
			IFNULL(ADDR, '') AS addr, 
			IFNULL(TEL_NO, '') AS telNo
      	FROM 
      		TH_STR_INFO_MST 
      	WHERE 1 = 1 
      		AND COMPANY_CD = #{companyCd} 
          	AND (
				INSTR(VIEW_STR_CD, #{strNm}) > 0 
            	OR 
            	INSTR(STR_NM, #{strNm}) > 0
          	) 
          	AND USE_YN = 'Y'
    ]]>
    </select>    
    
    <!-- 매장 조회 목록(팝업) -->
    <select id="retrieveStrCd" parameterType="Map" resultType="GridStoreMgntVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
    	SELECT 
    		A.STR_CD        		AS strCd, 
         	A.STR_NM        		AS strNm, 
         	A.COMPANY_CD    		AS companyCd, 
         	A.VIEW_STR_CD			AS viewStrCd, 
         	IFNULL(A.ADDR, '')		AS addr, 
         	IFNULL(A.TEL_NO, '')	AS telNo, 
         	B.ORG_CD        		AS orgCd, 
         	B.ORG_NM        		AS orgNm,
         	fnGetOrgFullName(A.COMPANY_CD, A.ORG_CD)	as orgFullNm         	 
      	FROM 
      		TH_STR_INFO_MST A 
      		LEFT OUTER JOIN 
      		TH_COMPANY_ORG_MST B 
        	ON A.ORG_CD = B.ORG_CD 
       		AND A.COMPANY_CD = B.COMPANY_CD 
       		INNER JOIN TH_STR_GW_MST C
          ON A.STR_CD = C.STR_CD
     	WHERE A.COMPANY_CD = #{companyCd} 
       		AND A.USE_YN = 'Y' 
       		AND A.VIEW_STR_CD <> '00000'
       		AND C.GW_ADDR <> '000000000000'
          AND C.GW_IP IS NOT NULL
    ]]>
    <if test='strNm != null and strNm != ""'>
   		<![CDATA[
   			AND (
    			INSTR(A.STR_NM, #{strNm}) > 0 
    			OR 
    			INSTR(A.VIEW_STR_CD, #{strNm}) > 0
   			)
   		]]>
	</if>
	<if test='searchType == "org"'>
		<![CDATA[
			AND A.ORG_CD <> #{orgCd} 
		]]>
	</if>
    <![CDATA[
     	ORDER BY ${sidx} ${sord}
    ]]>
    <include refid="PagingTemplateBottom" />
    </select>






    <!-- 조직도 팝업 조회 -->
    <select    id="retrieveOrg" parameterType="Map" resultType="Map">
    SELECT A.ORG_CD                         AS orgCd
         , A.ORG_NM                         AS text
         , A.UPER_ORG_CD                    AS uperOrgCd
         , A.DEPTH_LVL                      AS lvl
      FROM TH_COMPANY_ORG_MST A
     WHERE A.COMPANY_CD = #{companyCd}

     UNION ALL

    SELECT B.STR_CD                         AS orgCd
         , B.STR_NM                         AS text
         , B.ORG_CD                         AS uperOrgCd
         , 'S'                              AS lvl
      FROM TH_STR_INFO_MST B
     WHERE B.COMPANY_CD = #{companyCd}
       AND B.ORG_CD IS NOT NULL
       AND B.ORG_CD != ''

    /* rems.common.persistence.CommonMapper.retrieveOrg */
     </select>
     
    <!-- 사용자 팝업 조회 -->
    <select id="retrieveUserList" parameterType="Map" resultType="UserMngVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
        SELECT A.USER_ID        AS userId
              ,A.USER_NM        AS userNm
              ,CAST(AES_DECRYPT(A.USER_PW , 'REMS_ADM') as char(100)) AS USER_PW_CNV
              ,A.COMPANY_CD     AS companyCd
              ,D.COMPANY_NM     AS companyNm
              ,B.AUTH_ID        AS authId
              ,C.AUTH_NM        AS authNm
              ,F.AUTH_SP        AS authSp
              ,A.ORG_CD         AS orgCd
              ,E.ORG_NM         AS orgNm
              ,A.STR_CD         AS strCd
              ,A.EULA_YN        AS eulaYn
              ,A.USE_YN         AS useYn
          FROM TH_USER_MST A
               INNER JOIN TH_USER_AUTH B            ON A.COMPANY_CD = B.COMPANY_CD AND A.USER_ID = B.USER_ID
               INNER JOIN TH_AUTH C                 ON A.COMPANY_CD = C.COMPANY_CD AND B.AUTH_ID = C.AUTH_ID
               INNER JOIN TH_COMPANY_MST D          ON A.COMPANY_CD = D.COMPANY_CD
               LEFT OUTER JOIN TH_COMPANY_ORG_MST E ON A.COMPANY_CD = E.COMPANY_CD AND A.ORG_CD = E.ORG_CD
	           JOIN TH_AUTH F  ON B.COMPANY_CD = F.COMPANY_CD  AND B.AUTH_ID = F.AUTH_ID      
         WHERE A.COMPANY_CD = #{companyCd}
           AND A.USE_YN = 'Y'
           AND F.AUTH_SP = 'S'
    ]]>
        <if test="userId != null and userId != ''" >
        <![CDATA[
            AND A.USER_ID like CONCAT('%',#{userId},'%')
        ]]>
        </if>
        <if test="userNm != null and userNm != ''" >
        <![CDATA[
            AND A.USER_NM like CONCAT('%',#{userNm},'%')
        ]]>
        </if>
    <![CDATA[
        ORDER BY ${sidx} ${sord}
    ]]>
    <include refid="PagingTemplateBottom" />
    </select>

	<!-- 기상지역 조회 카운트 -->
    <select id="retrieveAreaCdCnt" parameterType="Map" resultType="AreaVo">
	<![CDATA[
		SELECT 
			COUNT(*) 				AS areaCnt, 
			MAX(A.LOCAL_AREA_CD)	AS areaCd, 
			TRIM(CONCAT(MAX(A.AREA_NM), ' ', MAX(A.CITY_NM), ' ', MAX(A.DONG_NM))) AS fullAreaNm, 
         	MAX(A.AREA_NM)          AS areaNm, 
         	MAX(A.CITY_NM )         AS cityNm, 
         	MAX(A.DONG_NM)          AS dongNm 
		FROM 
			TH_AREA_MST A, 
			TH_COMPANY_MST B 
		WHERE 1 = 1 
			AND A.COUNTRY_CD = B.COUNTRY_CD 
			AND B.COMPANY_CD = #{companyCd} 
			AND (
				INSTR(A.AREA_NM, #{localAreaNm}) > 0 
            	OR 
            	INSTR(A.CITY_NM, #{localAreaNm}) > 0 
              	OR 
            	INSTR(A.DONG_NM, #{localAreaNm}) > 0
          	)
    ]]>
    </select>
    
    <!-- 기상지역 조회 목록(팝업) -->
    <select id="retrieveAreaCd" parameterType="Map" resultType="AreaVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
		SELECT 
			A.LOCAL_AREA_CD         AS areaCd, 
         	TRIM(CONCAT(A.AREA_NM, ' ', A.CITY_NM, ' ', A.DONG_NM)) AS fullAreaNm, 
         	A.AREA_NM               AS areaNm, 
         	A.CITY_NM               AS cityNm, 
         	A.DONG_NM               AS dongNm 
      	FROM 
      		TH_AREA_MST A, 
      		TH_COMPANY_MST B 
        WHERE 1 = 1 
			AND A.COUNTRY_CD = B.COUNTRY_CD
       		AND B.COMPANY_CD = #{companyCd} 
            AND (
				INSTR(A.AREA_NM, #{localAreaNm}) > 0 
            	OR 
            	INSTR(A.CITY_NM, #{localAreaNm}) > 0 
              	OR 
            	INSTR(A.DONG_NM, #{localAreaNm}) > 0
          	)
	]]>
		<if test='areaCd != null and areaCd != ""'>
       		AND A.LOCAL_AREA_CD = #{areaCd}
    	</if>
    	<if test='areaNm != null and areaNm != ""'>
         	AND A.AREA_NM = #{areaNm}
    	</if>
    	<if test='cityNm != null and cityNm != ""'>
         	AND A.CITY_NM = #{cityNm}
    	</if>
    	<if test='dongNm != null and dongNm != ""'>
         	AND A.DONG_NM = #{dongNm}
    	</if>
    	<if test='srchCityNm != null and srchCityNm != ""'>
         	AND A.CITY_NM LIKE CONCAT(#{srchCityNm}, '%')
    	</if>
    	<if test='srchDongNm != null and srchDongNm != ""'>
         	AND A.DONG_NM LIKE CONCAT(#{srchDongNm}, '%')
    	</if>
    <![CDATA[
    	ORDER BY ${sidx} ${sord}
    ]]>
    <include refid="PagingTemplateBottom" />
    </select>

    <!-- 기상 지역 팝업 조회(시도 AREA_NM) -->
    <select id="retrieveAreaNm" parameterType="Map" resultType="AreaVo">
    <![CDATA[
    SELECT DISTINCT
         AREA_NM               AS areaNm
      FROM TH_AREA_MST A, TH_COMPANY_MST B
     WHERE A.COUNTRY_CD = B.COUNTRY_CD
        AND B.COMPANY_CD = #{companyCd} 
     ORDER BY areaNm
    ]]>
    <![CDATA[

      /* rems.common.persistence.CommonMapper.retrieveAreaCd */
    ]]>
    </select>

    <!-- 기상 지역 팝업 조회(시군구 CITY_NM) -->
    <select id="retrieveCityNm" parameterType="Map" resultType="AreaVo">
    <![CDATA[
    SELECT DISTINCT
          CITY_NM               AS cityNm
      FROM TH_AREA_MST A, TH_COMPANY_MST B
     WHERE A.COUNTRY_CD = B.COUNTRY_CD
        AND B.COMPANY_CD = #{companyCd}
    ]]>
       AND AREA_NM        = #{areaNm}
    <![CDATA[

      /* rems.common.persistence.CommonMapper.retrieveCityNm */
    ]]>
    </select>

    <!-- 기상 지역 팝업 조회(동 DONG_NM) -->
    <select id="retrieveDongNm" parameterType="Map" resultType="AreaVo">
    <![CDATA[
    SELECT DISTINCT
          DONG_NM               AS dongNm
      FROM TH_AREA_MST A, TH_COMPANY_MST B
     WHERE A.COUNTRY_CD = B.COUNTRY_CD
        AND B.COMPANY_CD = #{companyCd}
    ]]>
       AND CITY_NM        = #{cityNm}
    <![CDATA[

      /* rems.common.persistence.CommonMapper.retrieveDongNm */
    ]]>
    </select>

    <!-- 회사 select -->
    <select id="retrieveCompanyCd" parameterType="Map" resultType="SelectVo">
    <![CDATA[
    SELECT COMPANY_CD               AS value
          ,COMPANY_NM                AS name
      FROM TH_COMPANY_MST
    ]]>
     <if test="userId == 'remssysadmin' ">
         WHERE 1 = 1
         ORDER BY COMPANY_CD
    </if>
     <if test="userId != 'remssysadmin' ">
         WHERE COMPANY_CD = #{companyCd}
    </if>
    <![CDATA[

      /* rems.common.persistence.CommonMapper.retrieveCompanyCd */
    ]]>
    </select>

    <!-- 년월 select -->
    <select id="retrieveYearMonth" parameterType="Map" resultType="Map">
    <![CDATA[
    SELECT DATE_FORMAT(#{now}, '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -1 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -2 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -3 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -4 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -5 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -6 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
     SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -7 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
     SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -8 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -9 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -10 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -11 MONTH), '%Y-%m') AS yearMonth
     UNION ALL
    SELECT DATE_FORMAT(DATE_ADD(#{now}, INTERVAL -12 MONTH), '%Y-%m') AS yearMonth

    /* rems.common.persistence.CommonMapper.retrieveYearMonth */
    ]]>
    </select>

    <select id="retrieveStoreRemsPartStoreList" parameterType="Map" resultType="GridStoreMgntVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
    SELECT A.STR_CD             AS strCd
         , A.STR_NM             AS strNm
         , A.COMPANY_CD         AS companyCd
         , A.VIEW_STR_CD        AS viewStrCd
         , B.ORG_CD              AS orgCd
         , B.ORG_NM              AS orgNm
      FROM TH_STR_INFO_MST A
      LEFT OUTER JOIN TH_COMPANY_ORG_MST B
        ON A.ORG_CD     = B.ORG_CD
       AND A.COMPANY_CD = B.COMPANY_CD
     WHERE A.COMPANY_CD = #{companyCd}
       AND A.USE_YN     = 'Y'
       AND A.STR_CD NOT IN ( SELECT DISTINCT A.STR_CD FROM TH_STR_REMS_DEVICE_CNT_MNT A, TH_STR_INFO_MST B WHERE A.STR_CD = B.STR_CD AND COMPANY_CD = #{companyCd} )
    ]]>
    <if test="viewStrCd != null and viewStrCd != ''">
         AND A.VIEW_STR_CD LIKE CONCAT( '%', #{viewStrCd}, '%')
    </if>
    <if test="strNm != null and strNm != ''">
         AND A.STR_NM LIKE CONCAT('%', #{strNm}, '%')
    </if>

    <![CDATA[
     ORDER BY ${sidx} ${sord}
    ]]>
    <include refid="PagingTemplateBottom" />
    </select>

    <select id="retrieveStoreInverterStoreList" parameterType="Map" resultType="GridStoreMgntVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
        SELECT
                A.STR_CD AS strCd
              , A.STR_NM AS strNm
              , A.COMPANY_CD AS companyCd
              , A.VIEW_STR_CD AS viewStrCd
              , A.ORG_CD AS orgCd
              , B.ORG_NM AS orgNm
          FROM
              (
               SELECT
                      A.STR_CD
                    , B.STR_NM
                    , B.COMPANY_CD
                    , B.VIEW_STR_CD
                    , B.ORG_CD
                FROM TH_STR_REMS_DEVICE_CNT_MNT A, TH_STR_INFO_MST B
               WHERE A.STR_CD = B.STR_CD
                 AND B.COMPANY_CD = #{companyCd}
                 AND INV != 0
                 AND B.USE_YN     = 'Y'
                     ]]>
                 <if test="viewStrCd != null and viewStrCd != ''">
                 AND B.VIEW_STR_CD LIKE CONCAT( '%', #{viewStrCd}, '%')
                 </if>
                 <if test="strNm != null and strNm != ''">
                 AND A.STR_NM LIKE CONCAT('%', #{strNm}, '%')
                 </if>
                 AND A.STR_CD NOT IN ( SELECT DISTINCT A.STR_CD
                                         FROM TH_STR_INV_HUB_MST A, TH_STR_INFO_MST B
                                        WHERE A.STR_CD = B.STR_CD
                                          AND B.COMPANY_CD = #{companyCd})
              ) A LEFT OUTER JOIN TH_COMPANY_ORG_MST B
            ON A.ORG_CD     = B.ORG_CD
           AND A.COMPANY_CD = B.COMPANY_CD
    <![CDATA[
     ORDER BY ${sidx} ${sord}
    ]]>
    <include refid="PagingTemplateBottom" />
    </select>

    <select id="retrieveStoreConfigStoreList" parameterType="Map" resultType="GridStoreMgntVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
        SELECT A.STR_CD             AS strCd
             , A.STR_NM             AS strNm
             , A.COMPANY_CD         AS companyCd
             , A.VIEW_STR_CD        AS viewStrCd
             , B.ORG_CD              AS orgCd
             , B.ORG_NM              AS orgNm
          FROM TH_STR_INFO_MST A
          LEFT OUTER JOIN TH_COMPANY_ORG_MST B
            ON A.ORG_CD     = B.ORG_CD
           AND A.COMPANY_CD = B.COMPANY_CD
         WHERE A.COMPANY_CD = #{companyCd}
           AND A.USE_YN     = 'Y'
           AND A.STR_CD NOT IN ( SELECT
                                        DISTINCT A.STR_CD
                                   FROM TH_STR_ENV_CONF_MST A, TH_STR_INFO_MST B
                                  WHERE A.STR_CD = B.STR_CD
                                    AND COMPANY_CD = #{companyCd}
                                    AND CONF_SP IN ('PEAK_TYPE', 'DIMM_TYPE', 'TEMP_TYPE', 'SIGN_TYPE')
                                )
        ]]>
        <if test="viewStrCd != null and viewStrCd != ''">
             AND A.VIEW_STR_CD LIKE CONCAT( '%', #{viewStrCd}, '%')
        </if>
        <if test="strNm != null and strNm != ''">
             AND A.STR_NM LIKE CONCAT('%', #{strNm}, '%')
        </if>
        <![CDATA[
         ORDER BY ${sidx} ${sord}
        ]]>
    <include refid="PagingTemplateBottom" />
    </select>

    <select id="retrieveGwStoreList" parameterType="Map" resultType="GridStoreMgntVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
        SELECT A.STR_CD             AS strCd
             , A.STR_NM             AS strNm
             , A.COMPANY_CD         AS companyCd
             , A.VIEW_STR_CD        AS viewStrCd
             , B.ORG_CD              AS orgCd
             , B.ORG_NM              AS orgNm
          FROM TH_STR_INFO_MST A
          LEFT OUTER JOIN TH_COMPANY_ORG_MST B
            ON A.ORG_CD     = B.ORG_CD
           AND A.COMPANY_CD = B.COMPANY_CD
         WHERE A.COMPANY_CD = #{companyCd}
           AND A.USE_YN     = 'Y'
           AND A.STR_CD NOT IN ( SELECT DISTINCT A.STR_CD FROM TH_STR_GW_MST A, TH_STR_INFO_MST B WHERE A.STR_CD = B.STR_CD AND COMPANY_CD = #{companyCd} )
        ]]>
        <if test="viewStrCd != null and viewStrCd != ''">
             AND A.VIEW_STR_CD LIKE CONCAT( '%', #{viewStrCd}, '%')
        </if>
        <if test="strNm != null and strNm != ''">
             AND A.STR_NM LIKE CONCAT('%', #{strNm}, '%')
        </if>

        <![CDATA[
         ORDER BY ${sidx} ${sord}
        ]]>
    <include refid="PagingTemplateBottom" />
    </select>

    <select id="retrieveFacilityStoreList" parameterType="Map" resultType="GridStoreMgntVo">
    <include refid="PagingTemplateHeader" />
    <![CDATA[
        SELECT A.STR_CD             AS strCd
             , A.STR_NM             AS strNm
             , A.COMPANY_CD         AS companyCd
             , A.VIEW_STR_CD        AS viewStrCd
             , B.ORG_CD              AS orgCd
             , B.ORG_NM              AS orgNm
          FROM TH_STR_INFO_MST A
          LEFT OUTER JOIN TH_COMPANY_ORG_MST B
            ON A.ORG_CD     = B.ORG_CD
           AND A.COMPANY_CD = B.COMPANY_CD
         WHERE A.COMPANY_CD = #{companyCd}
           AND A.USE_YN     = 'Y'
           AND A.STR_CD NOT IN ( SELECT DISTINCT A.STR_CD FROM TH_STR_REMS_DEVICE_MST A, TH_STR_INFO_MST B WHERE A.STR_CD = B.STR_CD AND COMPANY_CD = #{companyCd} )
        ]]>
        <if test="viewStrCd != null and viewStrCd != ''">
             AND A.VIEW_STR_CD LIKE CONCAT( '%', #{viewStrCd}, '%')
        </if>
        <if test="strNm != null and strNm != ''">
             AND A.STR_NM LIKE CONCAT('%', #{strNm}, '%')
        </if>

        <![CDATA[
         ORDER BY ${sidx} ${sord}
        ]]>
    <include refid="PagingTemplateBottom" />
    </select>

    <select id="retrieveEquipmentTypeList" parameterType="Map" resultType="SelectVo">
        SELECT COMM_CD_NM AS name, COMM_CD AS value
          FROM TH_COMM_CD
        WHERE COMM_GRP_CD = 'MAST02'
            AND USE_YN = 'Y'
         ORDER BY ORDER_SEQ ASC
    </select>

	<!-- 업체목록 select -->
	<select id="retrieveVendorList" parameterType="Map"  resultType="SelectVo">
	<![CDATA[
		SELECT 
			VENDOR_CD	AS value, 
    	  	VENDOR_NM	AS name 
    	FROM 
    		TH_VENDOR_MST 
       	WHERE 1 = 1 
       		AND USE_YN = 'Y'
      ]]>
       		 <if test="vendorCd != null">
             AND VENDOR_CD like #{vendorCd}
        	</if>
    <![CDATA[ 
			AND COMPANY_CD = #{companyCd} 
		ORDER BY name
	]]>
    </select>
    
    <!-- 공통코드 select -->
    <select id="retrieveComCodeList" parameterType="ComCodeVo" resultType="ComCodeVo">
        SELECT
            COMM_CD      AS code,
             COMM_CD_NM   AS commCdNm
          FROM
              TH_COMM_CD
         WHERE 1 = 1
             AND COMM_GRP_CD = #{commGrpCd}
             AND USE_YN = 'Y'
         ORDER BY ORDER_SEQ
    </select>
    
    <select id="retrieveAuthNmList" parameterType="Map" resultType="AuthVo">
        SELECT A.COMPANY_CD     AS companyCd
              ,D.COMPANY_NM     AS companyNm
              ,A.AUTH_ID        AS authId
              ,A.AUTH_SP        AS authSp
              ,A.AUTH_NM        AS authNm
         FROM  TH_AUTH A INNER JOIN TH_COMPANY_MST D ON A.COMPANY_CD = D.COMPANY_CD
        WHERE A.COMPANY_CD = #{companyCd}
    </select>    

</mapper>
