<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rems.system.persistence.DashBoardMgntMapper">

	<!-- 매장정보 -->
	<select id="retrieveStoreMstData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT 
			A.STR_CD                                	AS strCd
			,A.STR_NM                                	AS strNm
      		,A.VIEW_STR_CD                      	    AS viewStrCd
      		,A.ADDR                           	       	AS addr
      		,A.TEL_NO                                 	AS telNo
  		FROM 
  			TH_STR_INFO_MST A
 		WHERE 
 			A.STR_CD = #{strCd}
	]]>
	</select>
	
	<!-- 매장상단정보 -->
	<select id="retrieveStoreRealData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT (SELECT C.WEATHER_CD
          FROM TH_STR_INFO_MST A
               INNER JOIN TH_COMPANY_MST B     ON A.COMPANY_CD = B.COMPANY_CD
               INNER JOIN TH_FORECAST_LATEST C ON B.COUNTRY_CD = C.COUNTRY_CD AND A.LOCAL_AREA_CD = C.LOCAL_AREA_CD
         WHERE A.STR_CD = #{strCd}             
           AND YYYYMMDD = IF(DATE_FORMAT(now(), '%H') < 3, DATE_FORMAT(now() - INTERVAL 1 DAY, '%Y%m%d'), DATE_FORMAT(now(), '%Y%m%d'))
           AND HH = (SELECT MAX(HH)
                       FROM TH_FORECAST_LATEST
                      WHERE LOCAL_AREA_CD = A.LOCAL_AREA_CD
                        AND YYYYMMDD = IF(DATE_FORMAT(now(), '%H') < 3, DATE_FORMAT(now() - INTERVAL 1 DAY, '%Y%m%d'), DATE_FORMAT(now(), '%Y%m%d'))
                        AND HH <= IF(DATE_FORMAT(now(),'%H')  < 3, '24', DATE_FORMAT(now(),'%H'))
                    )
       ) AS weatherCd    
      ,(SELECT IFNULL(C.FORECAST_TEMP, '--.-')
          FROM TH_STR_INFO_MST A
               INNER JOIN TH_COMPANY_MST B     ON A.COMPANY_CD = B.COMPANY_CD
               INNER JOIN TH_FORECAST_LATEST C ON B.COUNTRY_CD = C.COUNTRY_CD AND A.LOCAL_AREA_CD = C.LOCAL_AREA_CD
         WHERE A.STR_CD = #{strCd}             
           AND C.YYYYMMDD = IF(DATE_FORMAT(now(), '%H') < 3, DATE_FORMAT(now() - INTERVAL 1 DAY, '%Y%m%d'), DATE_FORMAT(now(), '%Y%m%d'))
           AND C.HH = (SELECT MAX(HH)
                         FROM TH_FORECAST_LATEST
                        WHERE LOCAL_AREA_CD = A.LOCAL_AREA_CD
                          AND YYYYMMDD = IF(DATE_FORMAT(now(), '%H') < 3, DATE_FORMAT(now() - INTERVAL 1 DAY, '%Y%m%d'), DATE_FORMAT(now(), '%Y%m%d'))
                          AND HH <= IF(DATE_FORMAT(now(),'%H')  < 3, '24', DATE_FORMAT(now(),'%H'))
                      )
       ) AS forecastTemp
      ,(SELECT SENS_TEMP
          FROM TH_STR_REMS_DEVICE_BASE
         WHERE STR_CD = #{strCd}
           AND DEVICE_TYPE = 'T'
           AND YYYYMMDD = (SELECT MAX(YYYYMMDD)
                             FROM TH_STR_REMS_DEVICE_BASE
                            WHERE STR_CD = #{strCd}
                          )
           AND HHMIN = (SELECT MAX(HHMIN)
                          FROM TH_STR_REMS_DEVICE_BASE
                         WHERE STR_CD = #{strCd}
                           AND YYYYMMDD = (SELECT MAX(YYYYMMDD)
                                             FROM TH_STR_REMS_DEVICE_BASE
                                            WHERE STR_CD = #{strCd}
                                          )
                       )
       ) AS tSensorTemp 
      ,(SELECT IF(COUNT(*) = 0, 'OFF', 'ON')
          FROM TH_STR_CHN_ELEC_USE_BASE
         WHERE STR_CD = #{strCd}
           AND YYYYMMDD = DATE_FORMAT( NOW(), '%Y%m%d')
           AND HHMIN >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -15 minute), '%H%i')          
           AND EP_2CH_ACT_WATAGE >= ( SELECT STR_CONF_VAL FROM th_str_env_conf_mst WHERE STR_CD = #{strCd} AND CONF_SP = 'OPER_ELEC' )
           ORDER BY HHMIN desc LIMIT 1
       ) AS tempStat   
      ,IF((SELECT COUNT(ALARM_YN)
             FROM TH_STR_REMS_DEVICE_BASE
            WHERE STR_CD =  #{strCd}
              AND YYYYMMDD = DATE_FORMAT(now(),'%Y%m%d')
              AND HHMIN = (SELECT MAX(HHMIN) 
                             FROM TH_STR_REMS_DEVICE_BASE 
                            WHERE STR_CD = #{strCd}
                              AND YYYYMMDD = DATE_FORMAT(now(),'%Y%m%d')
                          )
              AND (TEMON_ID, TEMON_TYPE, PORT_NO) IN (SELECT TEMON_ID, TEMON_TYPE, PORT_NO
                                                        FROM TH_STR_REMS_DEVICE_MST 
                                                       WHERE STR_CD = #{strCd}
                                                         AND USE_YN = 'Y'
                                                     )
              AND ALARM_YN IN ('H', 'L' , 'Y', 'E')
           )
           + 
           (SELECT COUNT(ALARM_SP)
             FROM TH_STR_INV_HUB_STATUS
            WHERE STR_CD =  #{strCd}
              AND YYYYMMDD = DATE_FORMAT(now(),'%Y%m%d')
              AND HHMIN = (SELECT MAX(HHMIN)
                             FROM TH_STR_INV_HUB_STATUS 
                            WHERE YYYYMMDD = DATE_FORMAT(now(),'%Y%m%d')
                              AND STR_CD = #{strCd}
                          )
              AND (HUB_ID, PORT_NO) IN (SELECT HUB_ID, PORT_NO 
                                          FROM TH_STR_INV_HUB_MST
                                         WHERE STR_CD = #{strCd}
                                           AND USE_YN = 'Y'
                                       )
              AND (ALARM_SP != '0000000000000000' OR (ALARM_SP = '0000000000000000' AND OPER_MODE = '0'))
           ) = 0, '정상', '비정상')  AS tempUnitStat   
      ,(SELECT IF(SIGN_STAT = '1', 'ON', 'OFF')
          FROM TH_STR_SIGN_STATUS
         WHERE STR_CD = #{strCd}
           AND YYYYMMDD = DATE_FORMAT( NOW(), '%Y%m%d')
          AND HHMIN >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 HOUR), '%H%i') 
          ORDER BY HHMIN desc LIMIT 1
       ) AS signStat 
      ,(SELECT IF(COUNT(*) != 0, '정상', '비정상')
          	FROM th_str_chn_elec_use_hh_sum
         	WHERE STR_CD = #{strCd}
           	AND YYYYMMDD = DATE_FORMAT( NOW(), '%Y%m%d')
           	AND HH >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 HOUR), '%H')
           	ORDER BY HH desc LIMIT 1
       ) AS semsStat   
	]]>
	</select>	
	
	<!-- 매장 1단 에너지사용량 -->
	<select id="retrieveStoreEnergyData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT
			(SELECT ROUND(IFNULL(CONT_DEMAND_POWER, 0) / 1000, 0) 	AS contKilo
			   FROM TH_STR_INFO_MST
			  WHERE STR_CD = #{strCd}
			) 			                         								AS contKilo,
	       (SELECT ROUND(IFNULL(EP_1CH_EFT_WATAGE, 0) / 1000, 0)
	          FROM th_str_chn_elec_use_mm_sum
	         WHERE STR_CD = #{strCd}
	           AND YYYYMM = DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y%m')
	       ) 																	AS lastMonthUsage,
	       (SELECT ROUND(IFNULL(EP_1CH_EFT_WATAGE, 0) / 1000, 0)
	          FROM th_str_chn_elec_use_mm_sum
	         WHERE STR_CD = #{strCd}
	          AND YYYYMM = DATE_FORMAT(NOW(), '%Y%m')
	       ) 																	AS curMonthUsage,
	      CASE WHEN DATE_FORMAT(NOW(), '%d') <= 21
	      THEN (SELECT FORMAT(ROUND(IFNULL(PREDICT_WATAGE, 0) / 1000, 0) * 1.3, 0)
	          	  FROM th_str_ener_use_mm_predict 
	         	 WHERE STR_CD = #{strCd}
	          	   AND YYYYMM = DATE_FORMAT(NOW(), '%Y%m')
		         ORDER BY YYYYMMDD DESC
		         LIMIT 1
				) 
	       ELSE (SELECT FORMAT(ROUND(IFNULL(PREDICT_WATAGE, 0) / 1000, 0) * 1.15, 0)
	          	   FROM th_str_ener_use_mm_predict 
	        	  WHERE STR_CD = #{strCd}
	           		AND YYYYMM = DATE_FORMAT(NOW(), '%Y%m')
	         	  ORDER BY YYYYMMDD DESC
	         	  LIMIT 1
	       		) 
	       END                                                                  AS curPredictUsage
	]]>
	</select>
	
	
	<!-- 매장 1단 에너지사용량 - 차트데이터 -->
	<select id="retrieveStoreEnergyChartData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT 
			A.YYYYMM                                       				AS yyyymm
		    ,ROUND(IFNULL(A.EP_1CH_EFT_WATAGE, 0) / 1000, 0) 			AS total
			,ROUND((IFNULL(A.EP_2CH_EFT_WATAGE , 0) + IFNULL(A.EP_3CH_EFT_WATAGE , 0)) / 1000, 0) 			AS temp
		    ,ROUND((IFNULL(A.EP_1CH_EFT_WATAGE, 0) - IFNULL(A.EP_2CH_EFT_WATAGE , 0) - IFNULL(A.EP_3CH_EFT_WATAGE , 0)) / 1000, 0) AS etc
		FROM 
			th_str_chn_elec_use_mm_sum A
		WHERE 
			A.STR_CD = #{strCd}
			AND 
			A.YYYYMM BETWEEN DATE_FORMAT(now() - INTERVAL 11 MONTH, '%Y%m') AND DATE_FORMAT(now(), '%Y%m')
		GROUP BY A.YYYYMM
		ORDER BY A.YYYYMM		
	]]>
	</select>
	
	<!-- 매장 시설물 알람 처리 현황 -->
	<select id="retrieveStoreAlarmData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[

		SELECT 
			SUM(IF(A.AS_RESULT = 'Y', 1, 0)) 				AS yResult
      		,SUM(IF(A.AS_RESULT <> 'Y', 1, 0)) 				AS nResult
      		,COUNT(A.AS_RESULT)               				AS resultCnt
  		FROM 
  			TH_GCM_AS_RESULT A
 		WHERE 
 			A.STR_CD like #{strCd}
   			AND 
   			A.YYYYMMDD BETWEEN DATE_FORMAT(now() - INTERVAL 12 MONTH, '%Y%m%d') AND DATE_FORMAT(now(), '%Y%m%d')   			
 		 GROUP BY A.STR_CD
 		
	]]>
	</select>
	
	<!-- 매장 시설물 현황 -->
	<select id="retrieveStoreEqmtData" parameterType="Map" resultType="DashBoardStoreDataVo">	
	<include refid="rems.common.persistence.CommonMapper.PagingTemplateHeader" />		
	<![CDATA[
		SELECT 
			AA.DEVICE_LOC AS deviceLoc
      		,AA.SENS_TEMP  AS sensTemp
      		,AA.NORMAL_YN  AS normalYn
      		,AA.ALARM_CNT  AS alarmCnt
  FROM (
        SELECT B.DEVICE_LOC
              ,A.SENS_TEMP
              ,IF(ALARM_YN = 'H' OR ALARM_YN = 'L' OR ALARM_YN = 'Y' OR ALARM_YN = 'E', '이상', '정상') AS NORMAL_YN
              ,(SELECT COUNT(NO)
                  FROM TH_GCM_AS_RESULT
                 WHERE YYYYMMDD > DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -30 DAY), '%Y%m%d')
                   AND STR_CD = A.STR_CD
                   AND TEMON_ID = A.TEMON_ID
                   AND TEMON_TYPE = A.TEMON_TYPE
                   AND PORT_NO = A.PORT_NO) AS ALARM_CNT
          FROM TH_STR_REMS_DEVICE_BASE A
               INNER JOIN TH_STR_REMS_DEVICE_MST B ON A.STR_CD = B.STR_CD AND A.TEMON_ID = B.TEMON_ID AND A.TEMON_TYPE = B.TEMON_TYPE AND A.PORT_NO = B.PORT_NO
         WHERE A.STR_CD = #{strCd}
           AND A.DEVICE_TYPE NOT IN ('T','X','')
           AND A.YYYYMMDD = (SELECT MAX(YYYYMMDD)
                               FROM TH_STR_REMS_DEVICE_BASE
                              WHERE STR_CD = #{strCd}
                                AND DEVICE_TYPE NOT IN ('T','X','')
                            )
           AND A.HHMIN = (SELECT MAX(HHMIN)
                            FROM TH_STR_REMS_DEVICE_BASE
                           WHERE STR_CD = #{strCd}
                             AND DEVICE_TYPE NOT IN ('T','X','')
                             AND YYYYMMDD = (SELECT MAX(YYYYMMDD)
                                               FROM TH_STR_REMS_DEVICE_BASE
                                              WHERE STR_CD = #{strCd}
                                                AND DEVICE_TYPE NOT IN ('T','X','')
                                          )
                         )
        UNION ALL
        SELECT B.DEVICE_LOC
              ,A.SENS_TEMP
              ,IF(ALARM_SP != '0000000000000000' OR (ALARM_SP = '0000000000000000' AND OPER_MODE = '0'), '이상', '정상') AS NORMAL_YN
              ,(SELECT COUNT(NO)
                  FROM TH_GCM_AS_RESULT
                 WHERE YYYYMMDD > DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -30 DAY), '%Y%m%d')
                   AND STR_CD = A.STR_CD
                   AND TEMON_ID = A.HUB_ID
                   AND TEMON_TYPE = 'I'
                   AND PORT_NO = A.PORT_NO) AS ALARM_CNT
          FROM TH_STR_INV_HUB_STATUS A
               INNER JOIN TH_STR_INV_HUB_MST B ON A.STR_CD = B.STR_CD AND A.HUB_ID = B.HUB_ID AND A.PORT_NO = B.PORT_NO
         WHERE A.STR_CD = #{strCd}
           AND A.DEVICE_TYPE NOT IN ('T','X','')
           AND A.YYYYMMDD = (SELECT MAX(YYYYMMDD)
                               FROM TH_STR_INV_HUB_STATUS
                              WHERE STR_CD = #{strCd}
                                AND DEVICE_TYPE NOT IN ('T','X','')
                            )
           AND A.HHMIN = (SELECT MAX(HHMIN)
                            FROM TH_STR_INV_HUB_STATUS
                           WHERE STR_CD = #{strCd}
                             AND DEVICE_TYPE NOT IN ('T','X','')
                             AND YYYYMMDD = (SELECT MAX(YYYYMMDD)
                                               FROM TH_STR_INV_HUB_STATUS
                                              WHERE STR_CD = #{strCd}
                                                AND DEVICE_TYPE NOT IN ('T','X','')
                                          )
                         )
       ) AA
 	]]>	    
	<![CDATA[
		ORDER BY ${sidx} ${sord}
	]]>
	<include refid="rems.common.persistence.CommonMapper.PagingTemplateBottom" />	
	</select>
	
	<!-- 월별 전력량 -->
	<select id="retrieveEnergyMonthStatus" parameterType="Map" resultType="EpStatusVo">
	<![CDATA[
		SELECT CONCAT(SUBSTRING(A.YYYYMM, 1, 4), '-', SUBSTRING(A.YYYYMM, 5, 2)) 					AS yyyymm
      		,ROUND(IFNULL(A.EP_1CH_EFT_WATAGE, 0) / 1000, 1)                    					AS total
      		,ROUND((IFNULL(A.EP_2CH_EFT_WATAGE , 0) + IFNULL(A.EP_3CH_EFT_WATAGE , 0)) / 1000, 1)   AS temp
      		,ROUND(AVG(IFNULL(E.FORECAST_TEMP, 0)), 1)                         						AS forecastTemp
  		FROM th_str_chn_elec_use_mm_sum A
       		INNER JOIN TH_STR_INFO_MST C         ON A.STR_CD = C.STR_CD
       		INNER JOIN TH_COMPANY_MST D          ON C.COMPANY_CD = D.COMPANY_CD
       		LEFT OUTER JOIN TH_FORECAST_LATEST E ON D.COUNTRY_CD = E.COUNTRY_CD AND C.LOCAL_AREA_CD = E.LOCAL_AREA_CD AND SUBSTRING(E.YYYYMMDD, 1, 6) = A.YYYYMM
 		WHERE A.STR_CD = #{strCd}
   			AND A.YYYYMM BETWEEN REPLACE(#{scrDateFrom}, '-', '') AND REPLACE(#{scrDateTo}, '-', '')
 		GROUP BY A.YYYYMM	
	]]>
	<![CDATA[
		ORDER BY ${sidx} ${sord}		
	]]>
	</select>
	
	
	<!-- 일별 전력량( 에너지사용량 탭 -->
	<select id="retrieveEnergyDayStatus_tab" parameterType="Map" resultType="EpStatusVo">	
	<![CDATA[
	
		SELECT A.YYYYMMDD                                                       AS yyyymmdd
		      ,SUBSTRING(A.YYYYMMDD, 7, 2)                                      AS dd
		      ,ROUND(A.EP_1CH_EFT_WATAGE / 1000, 1)                             AS total		      
		      ,ROUND((A.EP_2CH_EFT_WATAGE + A.EP_3CH_EFT_WATAGE) / 1000, 1)     AS temp              
              ,ROUND(B.T_SENSOR_TEMP_AVG, 1)                                    AS tSensorTemp
              ,ROUND(AVG(C.FORECAST_TEMP), 1)                                   AS forecastTemp
		  FROM th_str_chn_elec_use_dd_sum A
				LEFT JOIN th_str_sensor_dd_sum B	                
				ON	A.STR_CD = B.STR_CD
				AND A.YYYYMMDD = B.YYYYMMDD                
                LEFT JOIN TH_FORECAST_LATEST C 
                ON C.LOCAL_AREA_CD = ( SELECT LOCAL_AREA_CD FROM TH_STR_INFO_MST WHERE STR_CD = #{strCd})                
                AND A.YYYYMMDD = C.YYYYMMDD
		 WHERE A.STR_CD = #{strCd}
		   AND A.YYYYMMDD BETWEEN CONCAT(REPLACE(#{srcYyyymm}, '-', ''), '01') AND CONCAT(REPLACE(#{srcYyyymm}, '-', ''), '31')           
           GROUP BY YYYYMMDD
	]]>
	<![CDATA[
		ORDER BY ${sidx} ${sord}
	]]>	
	</select>
	
	<!-- CNS 쿼리 -->
	<select id="retrieveEnergyDayStatus" parameterType="Map" resultType="EpStatusVo">	
	<![CDATA[
	
		SELECT A.YYYYMMDD                                                       AS yyyymmdd
		      ,SUBSTRING(A.YYYYMMDD, 7, 2)                                      AS dd		      
		      ,ROUND(MAX(A.TOTAL_USE_WATAGE), 1)                         		AS total
		      ,ROUND((B.CONT_DEMAND_POWER/1000 - MAX(A.TOTAL_USE_WATAGE)), 1) 	AS contMinusTotal
		      ,ROUND(MAX(A.TEMP_USE_WATAGE), 1)                          		AS temp
		  FROM TH_STR_ENER_USE_QTR A
		       INNER JOIN TH_STR_INFO_MST B ON A.STR_CD = B.STR_CD
		 WHERE A.STR_CD = #{strCd}
		   AND A.YYYYMMDD BETWEEN CONCAT(REPLACE(#{srcYyyymm}, '-', ''), '01') AND CONCAT(REPLACE(#{srcYyyymm}, '-', ''), '31')
		 GROUP BY B.CONT_DEMAND_POWER, A.YYYYMMDD		 
	]]>
	<![CDATA[
		ORDER BY ${sidx} ${sord}
	]]>	
	</select>
	
	
	<!-- 일별 상세 전력량(차트) -->
	<select id="retrieveEnergyDayStatusChart" parameterType="Map" resultType="EpStatusVo">
	<![CDATA[
			SELECT A.YYYYMMDD										AS yyyymmdd
				,A.HH                                             	AS hh
	      		,ROUND(IFNULL( A.EP_1CH_EFT_WATAGE , 0) / 1000, 1)		AS main
      		,ROUND(IFNULL( A.EP_2CH_EFT_WATAGE + A.EP_3CH_EFT_WATAGE , 0) / 1000, 1)		AS temp
	      		,ROUND((IFNULL(A.EP_1CH_EFT_WATAGE, 0) - IFNULL(A.EP_2CH_EFT_WATAGE , 0) - IFNULL(A.EP_3CH_EFT_WATAGE, 0)) / 1000, 1) AS etc
	  		FROM th_str_chn_elec_use_hh_sum A
	 		WHERE A.STR_CD = #{strCd}
	   			AND A.YYYYMMDD = #{yyyymmdd}
	 		ORDER BY A.HH
	]]>	
	</select>
	
	<!-- 월별 계약전력량 -->
	<select id="retrieveDemandEnergyMonthStatus" parameterType="Map" resultType="EpContDemandListVo">
	<![CDATA[
		SELECT CONCAT(SUBSTRING(A.YYYYMMDD, 1, 4), '-', SUBSTRING(A.YYYYMMDD, 5, 2)) AS yyyymm
      		,ROUND(B.CONT_DEMAND_POWER / 1000, 1)                      AS contPower
      		,ROUND(MAX(A.TOTAL_USE_WATAGE), 1)                  AS total
      		,ROUND(B.CONT_DEMAND_POWER / 1000, 1) - ROUND(MAX(A.TOTAL_USE_WATAGE), 1)    AS freePower
      		,ROUND(MAX(A.TEMP_USE_WATAGE), 1)                   AS temp
  		FROM TH_STR_ENER_USE_QTR A
       		INNER JOIN TH_STR_INFO_MST B ON A.STR_CD = B.STR_CD
 		WHERE A.STR_CD = #{strCd}
   			AND SUBSTRING(A.YYYYMMDD, 1, 6) BETWEEN REPLACE(#{scrDateFrom}, '-', '') AND REPLACE(#{scrDateTo}, '-', '')
 		GROUP BY B.CONT_DEMAND_POWER, SUBSTRING(A.YYYYMMDD, 1, 6) 		
	]]>
	<![CDATA[
		ORDER BY ${sidx} ${sord}		
	]]>
	</select>
	
	<!-- 일별 계약전력 대비 사용량 -->
	<select id="retrieveDemandEnergyDayStatus" parameterType="Map" resultType="EpContDemandListVo">	
	<![CDATA[
		SELECT A.YYYYMMDD                                                     AS yyyymmdd
      		,SUBSTRING(A.YYYYMMDD, 7, 2)                                      AS dd      		
		      ,ROUND(MAX(A.TOTAL_USE_WATAGE), 1)                         	  AS total
		      ,ROUND((B.CONT_DEMAND_POWER/1000 - MAX(A.TOTAL_USE_WATAGE)), 1) AS contMinusTotal
		      ,ROUND(MAX(A.TEMP_USE_WATAGE), 1)                          	  AS temp
  		FROM TH_STR_ENER_USE_QTR A
       		INNER JOIN TH_STR_INFO_MST B ON A.STR_CD = B.STR_CD
 		WHERE A.STR_CD = #{strCd}
   			AND A.YYYYMMDD BETWEEN CONCAT(REPLACE(#{srcYyyymm}, '-', ''), '01') AND CONCAT(REPLACE(#{srcYyyymm}, '-', ''), '31')
 		GROUP BY B.CONT_DEMAND_POWER, A.YYYYMMDD 		
	]]>
	<![CDATA[
		ORDER BY ${sidx} ${sord}
	]]>	
	</select>
	
	<!-- 일별 상세 계약전력량(차트) -->
	<select id="retrieveDemandEnergyDayStatusChart" parameterType="Map" resultType="EpContDemandListVo">
	<![CDATA[
		SELECT A.YYYYMMDD						  AS yyyymmdd	
			,A.HH                                 AS hh
      		,A.QUARTER                            AS qrt
      		,ROUND(B.CONT_DEMAND_POWER / 1000, 1) AS contPower
      		,ROUND(A.TOTAL_USE_WATAGE, 1)  AS total
  		FROM TH_STR_ENER_USE_QTR A
       		INNER JOIN TH_STR_INFO_MST B ON A.STR_CD = B.STR_CD
 		WHERE A.STR_CD = #{strCd}
   			AND A.YYYYMMDD = #{yyyymmdd}
 		ORDER BY A.HH, A.QUARTER 		
	]]>	
	</select>
	
	<!-- 시설물 목록 -->
	<select id="retrieveFacilityStatus" parameterType="Map" resultType="PlantStatusListVo">
	<![CDATA[
		SELECT 
			TEMP.* 
		FROM 
			(
				SELECT 
					TEMP.*, 
					@n := @n+1 as records 
				FROM 
					(	
	 					SELECT 
	 						A.YYYYMMDD				AS yyyymmdd, 
	 						A.TEMON_ID              AS temonId, 
      						A.TEMON_TYPE            AS temonType, 
      						A.PORT_NO               AS portNo, 
      						A.DEVICE_LOC            AS deviceLoc, 
      						B.COMM_CD_NM            AS temonTypeName, 
      						A.MAX_SENS_TEMP         AS maxSensTemp, 
      						A.MIN_SENS_TEMP         AS minSensTemp, 
      						IFNULL(C.ALARM_CNT, 0)	AS alarmCnt 
  						FROM 
  							TH_STR_TEMP_MODULE_DD A
       						LEFT OUTER JOIN 
       						TH_COMM_CD B 
       						ON B.COMM_GRP_CD = 'VIEW13' 
       						AND A.TEMON_TYPE = B.COMM_CD 
       						LEFT OUTER JOIN 
       						(
       							SELECT 
       								STR_CD, 
       								TEMON_ID, 
       								TEMON_TYPE, 
       								PORT_NO, 
       								COUNT(NO) AS ALARM_CNT 
          						FROM 
          							TH_GCM_AS_RESULT 
         						WHERE 1 = 1 
         							AND STR_CD = #{strCd} 
         							AND YYYYMMDD > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 30 DAY), '%Y%m%d') 
         						GROUP BY STR_CD, TEMON_ID, TEMON_TYPE, PORT_NO
         					) C 
         					ON A.STR_CD = C.STR_CD
           					AND A.TEMON_ID = C.TEMON_ID
           					AND A.TEMON_TYPE = C.TEMON_TYPE
           					AND A.PORT_NO = C.PORT_NO 
						WHERE 1 = 1 
							AND A.STR_CD = #{strCd} 
   							AND A.YYYYMMDD = REPLACE(#{scrYyyymmdd}, '-', '') 
   							AND A.DEVICE_TYPE != 'T'
						ORDER BY ${sidx} ${sord}
					) TEMP, 
					(
						SELECT 
							@n:=0
					) r 
			) TEMP 
	]]>				
	</select>
	
	<!-- 시설물 온도(차트) -->
	<select id="retrieveFacilityStatusChart" parameterType="Map" resultType="PlantStatusListVo">
	<![CDATA[
 		SELECT YYYYMMDD	AS yyyymmdd
 			,HHMIN		AS hhmin
      		,SENS_TEMP	AS sensTemp
  		FROM   		
	]]>  		
	<if test='temonType == "T"'>
		<![CDATA[  		
  			TH_STR_REMS_DEVICE_BASE
  		]]>
   	</if>
   	<if test='temonType == "Z"'>
		<![CDATA[  		
  			TH_STR_REMS_DEVICE_BASE
  		]]>
   	</if>
   	<if test='temonType == "I"'>
   		<![CDATA[
  			TH_STR_INV_HUB_STATUS
  		]]>
   	</if>
   	<![CDATA[  			
 		WHERE YYYYMMDD = REPLACE(#{yyyymmdd}, '-', '')
   			AND STR_CD = #{strCd}
	]]>
	<if test='temonType == "T"'>
		<![CDATA[
   			AND TEMON_ID = #{temonId}
   			AND TEMON_TYPE = #{temonType}
   		]]>
   	</if>
   	<if test='temonType == "Z"'>
		<![CDATA[
   			AND TEMON_ID = #{temonId}
   			AND TEMON_TYPE = #{temonType}
   		]]>
   	</if>
   	<if test='temonType == "I"'>
   		<![CDATA[
   			AND HUB_ID = #{temonId}
   		]]>
	</if>
	<![CDATA[
   			AND PORT_NO = #{portNo}
 		ORDER BY YYYYMMDD, HHMIN
	]]>	
	</select>
	
	<!-- 알림 목록 -->
	<select id="retrieveAlarmStatus" parameterType="Map" resultType="GridEqmtAlarmListVo">	
	<include refid="rems.common.persistence.CommonMapper.PagingTemplateHeader" />		
	<![CDATA[
		SELECT 
 			A.NO                                        AS no, 
			A.DEVICE_LOC                                AS deviceLoc, 
			A.STR_CD									AS strCd, 
			DATE_FORMAT(A.ALARM_DATE_S,'%Y-%m-%d %T')	AS alarmDateS, 
			DATE_FORMAT(A.ALARM_DATE_E,'%Y-%m-%d %T')   AS alarmDateE, 
            IF(A.AS_RESULT = 'Y', '처리', '미처리')     AS asResult, 
			A.ALARM_MESSAGE                             AS alarmMessage, 
			A.AS_VENDOR_NM                              AS asVendorNm, 
			A.AS_ENGINEER                               AS asEngineer, 
			DATE_FORMAT(A.AS_DATE,'%Y-%m-%d %T')        AS asDate, 
            CASE WHEN A.AS_METHOD	= "A" THEN "유선상담"
		    WHEN A.AS_METHOD	= "B" THEN "방문"
		    WHEN A.AS_METHOD	= "C" THEN "기타"
		    END             							AS asContents,
            A.AS_NOTE                                   AS asNote, 
            IFNULL(C.ALARM_CNT, 0)						AS alarmCnt,  
            A.YYYYMMDD									AS yyyymmdd, 
			A.HHMIN										AS hhmin, 
			A.TEMON_ID									AS temonId, 
			A.TEMON_TYPE								AS temonType, 
			A.PORT_NO									AS portNo 
		FROM 
			TH_GCM_AS_RESULT A
			LEFT OUTER JOIN 
       		(
				SELECT 
       				STR_CD, 
       				TEMON_ID, 
       				TEMON_TYPE, 
       				PORT_NO, 
       				COUNT(NO) AS ALARM_CNT 
				FROM 
          			TH_GCM_AS_RESULT 
				WHERE 1 = 1 
         			AND STR_CD = #{strCd}
         			AND ALARM_DATE_E > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 30 DAY), '%Y%m%d') 
				GROUP BY STR_CD, TEMON_ID, TEMON_TYPE, PORT_NO
			) C 
			ON A.STR_CD = C.STR_CD
           	AND A.TEMON_ID = C.TEMON_ID
           	AND A.TEMON_TYPE = C.TEMON_TYPE
           	AND A.PORT_NO = C.PORT_NO 
			LEFT OUTER JOIN 
			TH_STR_REMS_DEVICE_MST D 
			ON A.STR_CD = D.STR_CD 
			AND A.TEMON_ID = D.TEMON_ID 
			AND A.TEMON_TYPE = D.TEMON_TYPE 
			AND A.PORT_NO = D.PORT_NO 
			LEFT OUTER JOIN 
			TH_STR_INV_HUB_MST E 
			ON A.STR_CD = E.STR_CD 
			AND A.TEMON_ID = E.HUB_ID 
			AND A.PORT_NO = E.PORT_NO 
		WHERE 1 = 1 
			AND A.STR_CD = #{strCd} 
  			AND A.ALARM_DATE_E BETWEEN REPLACE(#{scrDateFrom}, '-', '') AND REPLACE(#{scrDateTo}, '-', '') 
	]]>
	<if test='scrEqmt != null and scrEqmt != ""'>
		<![CDATA[
       		AND (
       			D.DEVICE_TYPE = #{scrEqmt} 
       			OR 
       			E.DEVICE_TYPE = #{scrEqmt}
       		)
       	]]>
	</if>
	<if test='scrAsResult != null and scrAsResult != ""'>
		<![CDATA[
       		AND A.AS_RESULT = #{scrAsResult} 
       	]]>
	</if>
	<if test='scrVendorNm != null and scrVendorNm != ""'>
		<![CDATA[
       		AND A.AS_VENDOR_NM = #{scrVendorNm} 
		]]>
	</if>
	<![CDATA[
		ORDER BY ${sidx} ${sord}
	]]>
	<include refid="rems.common.persistence.CommonMapper.PagingTemplateBottom" />
	</select>
		
	<!-- 대시보드 - 상단정보 -->
	<select id="retrieveDashStoreMstData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT
			COUNT(A.STR_CD) AS storeCount,
			A.COMPANY_CD AS companyCd,
			B.YYYYMM AS yyyymm,
			IFNULL(ROUND(SUM(B.EP_1CH_EFT_WATAGE) / 1000 / CAST(DATE_FORMAT(NOW(), '%d') AS UNSIGNED), 0), 0) AS totalAvgUse,
			IFNULL(ROUND(SUM(B.EP_1CH_EFT_WATAGE) / 1000 / CAST(DATE_FORMAT(NOW(), '%d') AS UNSIGNED) / COUNT(A.STR_CD), 0), 0) AS avgUse,
			IFNULL(ROUND(SUM(B.EP_1CH_EFT_WATAGE) / 1000, 0), 0) AS totalUse,
			IFNULL(ROUND(SUM(C.PREDICT_WATAGE) / 1000, 0), 0) AS curPredictUsage
		FROM TH_STR_INFO_MST A
		LEFT OUTER JOIN TH_STR_CHN_ELEC_USE_MM_SUM B
		ON A.STR_CD = B.STR_CD
		AND B.YYYYMM = DATE_FORMAT(NOW(), '%Y%m')
		LEFT OUTER JOIN(SELECT AA.STR_CD,
					AA.YYYYMM,
					AA.PREDICT_WATAGE
			FROM TH_STR_ENER_USE_MM_PREDICT AA,
				TH_STR_INFO_MST BB
			WHERE AA.STR_CD = BB.STR_CD
			AND BB.USE_YN = 'Y'
			AND BB.COMPANY_CD = #{companyCd}
			AND AA.YYYYMM = DATE_FORMAT(NOW(), '%Y%m')
			AND AA.YYYYMMDD   = DATE_FORMAT(NOW(), '%Y%m%d')
		) C
		ON B.STR_CD = C.STR_CD
		AND B.YYYYMM = C.YYYYMM
		LEFT JOIN TH_VENDOR_STR_MAP D
		ON A.STR_CD = D.STR_CD
		LEFT JOIN TH_VENDOR_MST D2
		ON D.VENDOR_CD = D2.VENDOR_CD
		LEFT JOIN TH_ELECTRICENT_STR_MAP E
		ON A.STR_CD = E.STR_CD
		LEFT JOIN TH_ELECTRICENT_MST E2
		ON E.ELECTRICENT_CD = E2.ELECTRICENT_CD,
		TH_STR_GW_MST GM
		WHERE A.STR_CD = GM.STR_CD
		AND GM.GW_ADDR != '000000000000'
		AND GM.GW_IP IS NOT NULL
		AND A.USE_YN = 'Y'
		AND A.COMPANY_CD = #{companyCd}
		AND A.REMS_START_DT <= DATE_FORMAT(NOW(), '%Y%m%d')
	]]>
	</select>	
	
	
	
	<!-- 대시보드 - 계약전력 사용현황 -->
	<select id="retrieveStoreContPowerData" parameterType="Map" resultType="DashBoardStoreDataVo">	
	<include refid="rems.common.persistence.CommonMapper.PagingTemplateHeader" />		
	<![CDATA[
		SELECT B.STR_NM                               AS strNm
      		,ROUND(B.CONT_DEMAND_POWER/1000, 1)     AS contPower
      		,ROUND(MAX(A.TOTAL_USE_WATAGE), 1) AS totalMain
      		,ROUND(MAX(A.TEMP_USE_WATAGE), 1)  AS temp
      		,ROUND(B.CONT_DEMAND_POWER/1000, 1) - ROUND(MAX(A.TOTAL_USE_WATAGE), 1)  AS freePower,
      		B.STR_CD								  AS strCd
		  FROM TH_STR_ENER_USE_QTR A
		       INNER JOIN TH_STR_INFO_MST B ON A.STR_CD = B.STR_CD,
               TH_STR_GW_MST GM
		 WHERE B.COMPANY_CD = #{companyCd}
		   AND A.STR_CD = GM.STR_CD
           AND GM.GW_ADDR != '000000000000'
           AND GM.GW_IP is not null
		   AND B.USE_YN = 'Y'
		    AND A.YYYYMMDD BETWEEN CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '01') AND CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '31') 
		 --  AND A.YYYYMMDD BETWEEN '20161201' AND '20171212'
		 GROUP BY B.STR_NM
		
 	]]>	    
	<![CDATA[
		ORDER BY ${sidx} ${sord}
		LIMIT 8
	]]>
	<include refid="rems.common.persistence.CommonMapper.PagingTemplateBottom" />	
	</select>
	
	
	<!-- 대시보드 - 시설물 알림 현황 -->
	<select id="retrieveDashStoreAlarmData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT (
					SELECT COUNT(A.AS_RESULT)
					FROM TH_GCM_AS_RESULT A
					INNER JOIN TH_COMM_CD B ON B.COMM_GRP_CD = 'VIEW13' AND A.TEMON_TYPE = B.COMM_CD
					LEFT OUTER JOIN (SELECT COMM_CD, COMM_CD_NM
							FROM TH_COMM_CD
							WHERE COMM_GRP_CD = 'MAST10') C
					ON A.AS_METHOD = C.COMM_CD
					LEFT OUTER JOIN TH_STR_REMS_DEVICE_MST D 
					ON A.STR_CD = D.STR_CD AND A.TEMON_ID = D.TEMON_ID AND A.TEMON_TYPE = D.TEMON_TYPE AND A.PORT_NO = D.PORT_NO
					LEFT OUTER JOIN TH_STR_INV_HUB_MST E ON A.STR_CD = E.STR_CD AND A.TEMON_ID = E.HUB_ID AND A.PORT_NO = E.PORT_NO        
					LEFT OUTER JOIN TH_STR_INFO_MST F ON A.STR_CD = F.STR_CD
					WHERE A.ALARM_DATE_E BETWEEN CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '01') AND DATE_FORMAT(NOW(), '%Y%m%d')
					AND F.COMPANY_CD = #{companyCd}
					AND F.USE_YN = 'Y'
					AND A.AS_RESULT = 'N'
				) 															AS nResult
				,(
					SELECT COUNT(A.AS_RESULT)
          			FROM TH_GCM_AS_RESULT A
					INNER JOIN TH_COMM_CD B ON B.COMM_GRP_CD = 'VIEW13' AND A.TEMON_TYPE = B.COMM_CD
					LEFT OUTER JOIN (SELECT COMM_CD, COMM_CD_NM
							FROM TH_COMM_CD
							WHERE COMM_GRP_CD = 'MAST10') C
					ON A.AS_METHOD = C.COMM_CD
					LEFT OUTER JOIN TH_STR_REMS_DEVICE_MST D 
					ON A.STR_CD = D.STR_CD AND A.TEMON_ID = D.TEMON_ID AND A.TEMON_TYPE = D.TEMON_TYPE AND A.PORT_NO = D.PORT_NO
					LEFT OUTER JOIN TH_STR_INV_HUB_MST E ON A.STR_CD = E.STR_CD AND A.TEMON_ID = E.HUB_ID AND A.PORT_NO = E.PORT_NO        
					LEFT OUTER JOIN TH_STR_INFO_MST F ON A.STR_CD = F.STR_CD
					WHERE A.ALARM_DATE_E BETWEEN CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '01') AND DATE_FORMAT(NOW(), '%Y%m%d')
					AND F.COMPANY_CD = #{companyCd}
					AND F.USE_YN = 'Y'
					AND A.AS_RESULT = 'Y'
       			) 															AS yResult
      			,(
      				SELECT COUNT(A.AS_RESULT)
          			FROM TH_GCM_AS_RESULT A
					INNER JOIN TH_COMM_CD B ON B.COMM_GRP_CD = 'VIEW13' AND A.TEMON_TYPE = B.COMM_CD
					LEFT OUTER JOIN (SELECT COMM_CD, COMM_CD_NM
							FROM TH_COMM_CD
							WHERE COMM_GRP_CD = 'MAST10') C
					ON A.AS_METHOD = C.COMM_CD
					LEFT OUTER JOIN TH_STR_REMS_DEVICE_MST D 
					ON A.STR_CD = D.STR_CD AND A.TEMON_ID = D.TEMON_ID AND A.TEMON_TYPE = D.TEMON_TYPE AND A.PORT_NO = D.PORT_NO
					LEFT OUTER JOIN TH_STR_INV_HUB_MST E ON A.STR_CD = E.STR_CD AND A.TEMON_ID = E.HUB_ID AND A.PORT_NO = E.PORT_NO        
					LEFT OUTER JOIN TH_STR_INFO_MST F ON A.STR_CD = F.STR_CD
					WHERE A.ALARM_DATE_E BETWEEN CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '01') AND DATE_FORMAT(NOW(), '%Y%m%d')
					AND F.COMPANY_CD = #{companyCd}
					AND F.USE_YN = 'Y'
       			)															AS resultCnt		
 	]]>	 	
	</select>
	
	
	<!-- 대시보드 - 피크 현황 차트 데이터 -->
	<select id="retrieveStorePeakChartData" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT 
			CONCAT(SUBSTRING(A.YYYYMMDD, 1, 6))								 	AS yyyymm
      		,IFNULL( count( distinct(a.STR_CD)), 0)                                                AS peakCnt
  		FROM 
  			TH_STR_PEAK_ALARM A
       		INNER JOIN TH_STR_INFO_MST B 
       		ON 
       		A.STR_CD = B.STR_CD
 		WHERE 
 			B.COMPANY_CD = #{companyCd}
   			AND IFNULL(B.REMS_START_DT, '20000101' ) <= date_format(date_add(now(), interval 0 day), '%Y%m%d')
   			AND A.YYYYMMDD BETWEEN DATE_FORMAT(DATE_ADD(STR_TO_DATE(CONCAT(#{yyyymm}, '01'), '%Y%m%d'), interval -11 month), '%Y%m%d') AND CONCAT(REPLACE(#{yyyymm}, '-', ''), '31')
 		GROUP BY SUBSTRING(a.YYYYMMDD, 1, 6)
 		ORDER BY SUBSTRING(a.YYYYMMDD, 1, 6)
	]]>
	</select>
	
	<!-- 대시보드 - 시설물 알림 현황 -->
	<select id="retrieveDashDataCount" parameterType="Map" resultType="DashBoardStoreDataVo">		
	<![CDATA[
		SELECT eqmt.eqmt_cnt AS eqmtCnt
				,zero.zero_cnt AS zeroCnt
				,peak.peak_cnt AS peakCnt
				,eqst.eqst_cnt AS eqstCnt
				,noti.noti_cnt AS notiCnt
		FROM (
				SELECT COUNT(*) AS eqmt_cnt
				FROM TH_STR_INFO_MST B, TH_STR_GW_MST A
				LEFT JOIN TH_ELECTRICENT_STR_MAP C ON A.STR_CD = C.STR_CD
				LEFT JOIN TH_ELECTRICENT_MST D ON C.ELECTRICENT_CD = D.ELECTRICENT_CD
				LEFT JOIN TH_VENDOR_STR_MAP E ON A.STR_CD = E.STR_CD
				LEFT JOIN TH_VENDOR_MST F ON E.VENDOR_CD = F.VENDOR_CD
				WHERE 1=1
				AND A.STR_CD = B.STR_CD    
				AND A.GW_STATUS_YN = 'N'
				AND A.GW_CHECK_LAST_DTTM BETWEEN DATE_FORMAT((NOW()-INTERVAL 1 MONTH), '%Y%m%d') AND DATE_FORMAT(NOW(), '%Y%m%d')
				AND B.USE_YN = 'Y'
				AND B.COMPANY_CD = #{companyCd}
			)eqmt
			,(
				SELECT COUNT(*) AS zero_cnt
				FROM TH_STR_INFO_MST A
				LEFT OUTER JOIN (SELECT * FROM TH_STR_CHN_ELEC_USE_DD_SUM  WHERE YYYYMMDD = DATE_FORMAT(NOW(), '%Y%m%d')) B
				ON A.STR_CD = B.STR_CD
				, TH_STR_GW_MST D
				LEFT JOIN TH_ELECTRICENT_STR_MAP E
				ON D.STR_CD = E.STR_CD
				LEFT JOIN TH_ELECTRICENT_MST F
				ON E.ELECTRICENT_CD = F.ELECTRICENT_CD
				LEFT JOIN TH_VENDOR_STR_MAP G
				ON D.STR_CD = G.STR_CD
				LEFT JOIN TH_VENDOR_MST H
				ON G.VENDOR_CD = H.VENDOR_CD
				WHERE A.STR_CD = D.STR_CD
				AND A.USE_YN = 'Y'
				AND A.COMPANY_CD = #{companyCd}
				AND D.GW_ADDR != '000000000000'
				AND D.GW_IP IS NOT NULL
				AND ((A.REMS_START_DT < REPLACE(DATE_SUB(DATE_FORMAT(NOW(), '%Y%m%d'), INTERVAL 1 MONTH),'-','')
						AND (B.EP_1CH_EFT_WATAGE < '10000' OR B.EP_1CH_EFT_WATAGE IS NULL))
					OR (A.REMS_START_DT BETWEEN REPLACE(DATE_SUB(DATE_FORMAT(NOW(), '%Y%m%d'), INTERVAL 1 MONTH),'-','') 
											AND DATE_FORMAT(NOW(), '%Y%m%d')
						AND (B.EP_1CH_EFT_WATAGE < '10' OR B.EP_1CH_EFT_WATAGE IS NULL)
					))
			)zero
			,(
				SELECT COUNT(*) AS peak_cnt
				FROM (
					SELECT A.*
					FROM (
						SELECT * FROM TH_STR_PEAK_ALARM A
						WHERE SUBSTRING(A.YYYYMMDD, 1, 6) = DATE_FORMAT(NOW(),'%Y%m')
						AND A.SEND_SP ='2'
						AND A.PEAK_CONTROL_YN = 'Y'
						GROUP BY A.STR_CD
					)A
					INNER JOIN (SELECT * FROM TH_STR_INFO_MST B WHERE B.COMPANY_CD = #{companyCd} AND B.USE_YN = 'Y') B
					ON A.STR_CD = B.STR_CD
					LEFT OUTER JOIN TH_STR_CHN_ELEC_USE_MM_SUM C
					ON A.STR_CD = C.STR_CD
					AND C.YYYYMM = DATE_FORMAT(NOW(),'%Y%m')
					WHERE ROUND(B.CONT_DEMAND_POWER/1000, 1) < ROUND(C.MAX_TOTAL_USE_WATAGE, 1)
				) AA
			)peak
			,(
				SELECT COUNT(*) AS eqst_cnt
				FROM TH_GCM_AS_RESULT A
				INNER JOIN TH_COMM_CD B ON B.COMM_GRP_CD = 'VIEW13' AND A.TEMON_TYPE = B.COMM_CD
				LEFT OUTER JOIN (SELECT COMM_CD, COMM_CD_NM
						FROM TH_COMM_CD
						WHERE COMM_GRP_CD = 'MAST10') C
				ON A.AS_METHOD = C.COMM_CD
				LEFT OUTER JOIN TH_STR_REMS_DEVICE_MST D 
				ON A.STR_CD = D.STR_CD AND A.TEMON_ID = D.TEMON_ID AND A.TEMON_TYPE = D.TEMON_TYPE AND A.PORT_NO = D.PORT_NO
				LEFT OUTER JOIN TH_STR_INV_HUB_MST E ON A.STR_CD = E.STR_CD AND A.TEMON_ID = E.HUB_ID AND A.PORT_NO = E.PORT_NO        
				LEFT OUTER JOIN TH_STR_INFO_MST F ON A.STR_CD = F.STR_CD
				WHERE A.ALARM_DATE_E BETWEEN DATE_FORMAT((NOW()-INTERVAL 1 YEAR), '%Y%m%d') AND DATE_FORMAT(NOW(), '%Y%m%d')
				AND F.COMPANY_CD = #{companyCd}
				AND F.USE_YN = 'Y'
				AND A.AS_RESULT = 'N'
			)eqst
			,(
				SELECT  COUNT(*) AS noti_cnt
				FROM  TH_NOTICE A
				LEFT OUTER JOIN TH_USER_MST B ON A.PUB_ID = B.USER_ID
				LEFT OUTER JOIN TH_COMM_CD C ON C.COMM_GRP_CD = 'VIEW12' AND C.COMM_CD = A.NOTICE_TYPE_CD
				WHERE  A.COMPANY_CD = #{companyCd}
				AND  (A.PUB_YN = 'Y' OR #{authId} = 1)	   			   
				AND  ( A.PUB_START_DT >= CONCAT(DATE_FORMAT((NOW()-INTERVAL 1 MONTH), '%Y%m'), '01')
				AND  A.PUB_END_DT >= DATE_FORMAT(NOW(), '%Y%m%d'))
				AND  EXISTS (SELECT 1 FROM TH_NOTICE_TARGET WHERE COMPANY_CD = A.COMPANY_CD AND NOTICE_ID = A.NOTICE_ID AND AUTH_ID = #{authId})        
				AND  (#{authId} = 1 OR #{authId} IN (SELECT AA.AUTH_ID 
							FROM TH_AUTH AA INNER JOIN TH_NOTICE_TARGET BB ON AA.COMPANY_CD = BB.COMPANY_CD AND AA.AUTH_ID = BB.AUTH_ID
							WHERE AA.COMPANY_CD = A.COMPANY_CD
							AND AA.AUTH_SP <> 'S'
							AND BB.NOTICE_ID = A.NOTICE_ID)
					OR  #{authId} IN (SELECT AA.AUTH_ID
						FROM TH_AUTH AA INNER JOIN TH_NOTICE_TARGET BB ON AA.COMPANY_CD = BB.COMPANY_CD AND AA.AUTH_ID = BB.AUTH_ID
						INNER JOIN TH_NOTICE_TARGET_ORG CC ON AA.COMPANY_CD = CC.COMPANY_CD AND BB.NOTICE_ID = CC.NOTICE_ID AND BB.AUTH_ID = CC.AUTH_ID
						INNER JOIN TH_STR_INFO_MST DD      ON CC.COMPANY_CD = DD.COMPANY_CD AND CC.ORG_CD = DD.ORG_CD
						LEFT OUTER JOIN TH_USER_MST FF     ON FF.USER_ID = #{userId} AND DD.COMPANY_CD = FF.COMPANY_CD AND DD.STR_CD = FF.STR_CD
						LEFT OUTER JOIN TH_STR_USER_MAP GG  ON GG.USER_ID = #{userId} AND GG.STR_CD = FF.STR_CD
						WHERE AA.COMPANY_CD = A.COMPANY_CD
						AND AA.AUTH_SP = 'S'
						AND BB.NOTICE_ID = A.NOTICE_ID
						AND (DD.STR_CD IS NOT NULL OR FF.STR_CD IS NOT NULL)))
			)noti
	]]>
	</select>
	
</mapper>