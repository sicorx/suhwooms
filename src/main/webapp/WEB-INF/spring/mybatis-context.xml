<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 실 DB 접속정보 -->
	
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />	 
				
		
		<!-- property name="url" value="jdbc:mysql://127.0.0.1:3306/rems?autoReconnect=true;allowMultiQueries=true" /-->				
		<property name="url" value="jdbc:mysql://45.119.146.110:3306/rems?autoReconnect=true;allowMultiQueries=true" />
		
		
		<property name="username" value="root" />
		<property name="password" value="1234" />
		
		<property name="removeAbandoned" value="true" />
		<property name="initialSize" value="20" />
		<property name="maxActive" value="30" />
	</bean>

	 
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL         :  "/>
            </bean>
        </property>
    </bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:rems/common/*.xml</value>
				<value>classpath:rems/store/*.xml</value>
				<value>classpath:rems/total/*.xml</value>
				<value>classpath:rems/system/*.xml</value>
				<value>classpath:rems/energy/*.xml</value>
				<value>classpath:rems/plant/*.xml</value>
				<value>classpath:rems/facility/*.xml</value>
				<value>classpath:rems/eqmt/*.xml</value>
				<value>classpath:rems/closing/*.xml</value>
				<value>classpath:rems/management/*.xml</value>
				<value>classpath:rems/monitoring/*.xml</value>
			</list>
		</property>		
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- Mapper Interface 구현을 위한 스캐너 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="rems/**/persistence" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="retrieve*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="save*" read-only="true" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- spring security token 저장 -->
  	<bean id="savedRequestAwareAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="targetUrlParameter" value="targetUrl" />
  	</bean>	
</beans>
